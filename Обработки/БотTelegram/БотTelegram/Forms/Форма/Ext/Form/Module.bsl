
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Бот = "@yeezy_boost_bot";//Имя бота
	Объект.Токен = "265716514:AAFYynF3JxUWwyminDR-8y3IdpdtPJblgI8";//Ваш токен telegram
	Объект.Сервер = "api.telegram.org";
	//Заполнение таблицы команд бота
	НоваяКоманда = Объект.КомандыБота.Добавить();
	НоваяКоманда.Имя = "/start";
	НоваяКоманда.Действие = "ВывестиПриветствие";
	НоваяКоманда.Параметр = "";
	НоваяКоманда.Описание = "начало работы";
	НоваяКоманда.Параметр = "";
	НоваяКоманда = Объект.КомандыБота.Добавить();
	НоваяКоманда.Имя = "/help";
	НоваяКоманда.Действие = "ВывестиПодсказку";
	НоваяКоманда.Описание = "получение подсказки";
	НоваяКоманда.Параметр = "";
	НоваяКоманда = Объект.КомандыБота.Добавить();
	НоваяКоманда.Имя = "/sys_info";
	НоваяКоманда.Действие = "СистемнаИнформация";
	НоваяКоманда.Описание = "системная инф-ция. Параметр через пробел:" +	
	Символы.ПС + Символы.Таб + "ВерсияОС;ВерсияПриложения {по умолчанию};ИдентификаторКлиента;ИнформацияПрограммыПросмотра;ОперативнаяПамять;Процессор;ТипПлатформы.";
	НоваяКоманда.Параметр = "";
КонецПроцедуры

&НаСервере
Процедура ПоказатьСообщенияНаСервере()
	Ресурс = "bot" + Объект.Токен + "/getUpdates";
	Соединение  =  Новый HTTPСоединение(Объект.Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос);
	ДвоичныеДанныеОтвета = Ответ.ПолучитьТелоКакДвоичныеДанные();
	ПрочитатьДвоичныеДанныеОтвета(ДвоичныеДанныеОтвета);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСообщения(Команда)
	ПоказатьСообщенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДвоичныеДанныеОтвета(ДвоичныеДанныеОтвета)
	ИмяФайла = ПолучитьИмяВременногоФайла("tgm");
	ДвоичныеДанныеОтвета.Записать(ИмяФайла);
	ДеревоЗн = Новый ДеревоЗначений();
	//{Для версии 1С 8.3.6 и выше
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	СформироватьДерево(ДеревоЗн, ДеревоЗн, ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	//}
	
	//Создание колонок Реквизита формы типа ДанныеФормыДерево
	Если ЭтаФорма.Элементы.Дерево.ПодчиненныеЭлементы.Количество() = 0 Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		Для Каждого Колонка Из ДеревоЗн.Колонки Цикл
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Дерево"));
		КонецЦикла;
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	////
	// Преобразование объекта прикладного типа ДеревоЗначений
	// в реквизит управляемой формы (данные формы)
	ЗначениеВРеквизитФормы(ДеревоЗн, "Дерево");
	//Создание колонок элемента формы типа ТаблицаФормы для отображения дерева
	//которое для наглядности разместили на форме дерево сообщений
	Если ЭтаФорма.Элементы.Дерево.ПодчиненныеЭлементы.Количество() = 0 Тогда
		Для Каждого Колонка Из ДеревоЗн.Колонки Цикл
			НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), Элементы.Дерево);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = "Дерево." + Колонка.Имя;
		КонецЦикла;
	КонецЕсли;
	////
	ЗаполнитьРС(ДеревоЗн);
КонецПроцедуры

&НаСервере
Процедура СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON, Знач ИмяКолонки = Неопределено)
            ЧтениеJSON.Прочитать();
            TипJSON = ЧтениеJSON.ТипТекущегоЗначения;
            Если TипJSON = ТипЗначенияJSON.НачалоОбъекта ИЛИ TипJSON = ТипЗначенияJSON.НачалоМассива Тогда
                        НовСтр = СтрДерево.Строки.Добавить();
                        СформироватьДерево(Дерево, НовСтр, ЧтениеJSON);
            ИначеЕсли TипJSON = ТипЗначенияJSON.ИмяСвойства Тогда
                        СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON, ЧтениеJSON.ТекущееЗначение);
            ИначеЕсли TипJSON = ТипЗначенияJSON.Число     ИЛИ TипJSON = ТипЗначенияJSON.Строка ИЛИ TипJSON = ТипЗначенияJSON.Булево  ИЛИ TипJSON = ТипЗначенияJSON.Null  Тогда
                        Если Дерево.Колонки.Найти(ИмяКолонки) = Неопределено Тогда
                                   Дерево.Колонки.Добавить(ИмяКолонки);
                        КонецЕсли;
                        СтрДерево[ИмяКолонки] = ЧтениеJSON.ТекущееЗначение;
                        СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON);
            ИначеЕсли TипJSON = ТипЗначенияJSON.Комментарий Тогда
                        Если Дерево.Колонки.Найти("Комментарий") = Неопределено Тогда
                                   Дерево.Колонки.Добавить("Комментарий");
                        КонецЕсли;
                        СтрДерево.Комментарий = ЧтениеJSON.ТекущееЗначение;
                        СформироватьДерево(Дерево, СтрДерево, ЧтениеJSON);
            ИначеЕсли СтрДерево <> Неопределено Тогда
                        СформироватьДерево(Дерево, СтрДерево.Родитель, ЧтениеJSON);
            КонецЕсли;
КонецПроцедуры
		
&НаСервере
Процедура ЗаполнитьРС(ДеревоЗн)
	Для Каждого СтрОк Из ДеревоЗн.Строки Цикл//"Ок"
		Для Каждого СтрНов Из СтрОк.Строки Цикл//
			Для Каждого СтрАп Из СтрНов.Строки Цикл//update_id
				Для Каждого СтрМесс Из СтрАп.Строки Цикл//message_id
					date = СтрМесс.date;
					Команда = СокрЛП(СтрМесс.text);
					Параметр = "";  
					
					ПозицияПараметра = Найти(Команда, " ");//СтрНайти(Команда, " ") не подходит, т.к. ищет в различных направлениях - не только с начала строки
					Если ПозицияПараметра <> 0 Тогда
						Параметр = СокрЛП(Сред(Команда, ПозицияПараметра + 1));
						//{если версия ниже 1С 8.3.6 разкомментируйте
						//Параметр = ПереобразоватьЮникод(Параметр);
						//}
						Команда = Лев(Команда, ПозицияПараметра - 1);
					КонецЕсли;
					Если ЗначениеЗаполнено(Команда) Тогда
						МассивНайденныхКоманд = Объект.КомандыБота.НайтиСтроки(Новый Структура("Имя", Команда));
						Если МассивНайденныхКоманд.Количество() > 0 Тогда
							Для Каждого СтрИнфо Из СтрМесс.Строки Цикл//message_id
								chat_id = СтрИнфо.id;
								Если ЗначениеЗаполнено(chat_id) И chat_id > 0 Тогда
									//{Раскомментируйте, если используете регистр сведений КомандыПользователей
									//РС = РегистрыСведений.КомандыПользователей.СоздатьНаборЗаписей();
									//РС.Отбор.chat_id.Установить(chat_id);
									//РС.Отбор.date.Установить(date);
									//РС.Прочитать();
									//
									//Если РС.Количество() > 0 Тогда
									//        
									//         Для Каждого СтрРС Из РС Цикл
									//                     Если НЕ СтрРС.Выполнено Тогда
									//                                 СтрРС.Выполнено = ВыполнитьКомандуБота(СтрРС);
									//                     КонецЕсли;
									//         КонецЦикла;
									//        
									//         РС.Записать();
									//        
									//Иначе
									//         РСЗ = РегистрыСведений.КомандыПользователей.СоздатьМенеджерЗаписи();
									//         РСЗ.chat_id = chat_id;
									//         РСЗ.date = date;
									//         РСЗ.Команда = Команда;
									//         РСЗ.Выполнено = ВыполнитьКомандуБота(РСЗ);
									//         РСЗ.Записать();
									//        
									//КонецЕсли;
									//}
									//{а это закомментируйте, если используете РС КомандыПользователей
									РС = Объект.КомандыПользователей.НайтиСтроки(Новый Структура("chat_id, date", chat_id, date));
									Если РС.Количество() > 0 Тогда
										Для Каждого СтрРС Из РС Цикл
											Если НЕ СтрРС.Выполнено Тогда
												СтрРС.Выполнено = ВыполнитьКомандуБота(СтрРС, Параметр);
											КонецЕсли;
										КонецЦикла;
									Иначе
										РСЗ = Объект.КомандыПользователей.Добавить();
										РСЗ.chat_id = chat_id;
										РСЗ.date = date;
										РСЗ.Команда = Команда;
										РСЗ.Выполнено = ВыполнитьКомандуБота(РСЗ, Параметр);
									КонецЕсли;
									//}
									прервать;
								КонецЕсли;
							КонецЦикла;
						Иначе
							//команда не найдена
							//можно вывести справку по командам
							//...
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла
КонецПроцедуры	

&НаСервере
Функция ВыполнитьКомандуБота(ЗаписьРегистра, Параметр)
	Команда = ЗаписьРегистра.Команда;
	МассивНайденныхСтрок = Объект.КомандыБота.НайтиСтроки(Новый Структура("Имя", Команда));//исправьте, если используете РС
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		Для Каждого Стр Из МассивНайденныхСтрок Цикл
			Если Стр.ВыполняемоеДействие = "ВывестиПриветствие" Тогда
				ВывестиПриветствие(ЗаписьРегистра.chat_id);
			ИначеЕсли Стр.ВыполняемоеДействие = "ВывестиПодсказку" Тогда
				ВывестиПодсказку(ЗаписьРегистра.chat_id);
			ИначеЕсли  Стр.ВыполняемоеДействие = "СистемнаИнформация" Тогда
				ВывестиСистемнуюИнформацию(ЗаписьРегистра.chat_id, Параметр);
			Иначе
				ВывестиПодсказку(ЗаписьРегистра.chat_id);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ВывестиПодсказку(ЗаписьРегистра.chat_id);
	КонецЕсли;
	возврат Истина;
КонецФункции

&НаСервере
Процедура СообщитьОбОшибке(chat_id, ТекстОшибки)
            Ресурс = "bot" + Объект.Токен + "/sendMessage?chat_id=" + СтрЗаменить(Формат(chat_id, "ЧДЦ=; ЧС=; ЧРГ=."), ".", "") + "&text=" + ТекстОшибки;
            Соединение  =  Новый HTTPСоединение(Объект.Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
            Запрос = Новый HTTPЗапрос(Ресурс);
            Ответ = Соединение.Получить(Запрос);
КонецПроцедуры

//Текстовое представление списка команд
&НаСервере
Функция СписокКоманд()
	СтрВозврата = "";
	Для Каждого Стр Из Объект.ТаблицаПонимаемыхКоманд Цикл
		СтрВозврата = СтрВозврата + ?(СтрВозврата <> "", Символы.ПС, "") + Стр.Имя + " - " + Стр.Описание;
	КонецЦикла;
	возврат СтрВозврата;
КонецФункции

&НаСервере
Процедура ВывестиПриветствие(chat_id)
	Ресурс = "bot" + Объект.Токен + "/sendMessage?chat_id=" + СтрЗаменить(Формат(chat_id, "ЧДЦ=; ЧС=; ЧРГ=."), ".", "") + "&text= Здравствуйте!" +
	Символы.ПС + СписокКоманд() + Символы.ПС + "Удачи!";
	Соединение  =  Новый HTTPСоединение(Объект.Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос);
КонецПроцедуры

&НаСервере
Процедура ВывестиПодсказку(chat_id)
	Ресурс = "bot" + Объект.Токен + "/sendMessage?chat_id=" + СтрЗаменить(Формат(chat_id, "ЧДЦ=; ЧС=; ЧРГ=."), ".", "") + "&text= " + СписокКоманд();
	Соединение  =  Новый HTTPСоединение(Объект.Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос);
КонецПроцедуры

&НаСервере
Процедура ВывестиСистемнуюИнформацию(chat_id, Параметр)
	Параметр = ?(СокрЛП(Параметр) = "", "ВерсияПриложения", СокрЛП(Параметр));
	Инфо = Новый СистемнаяИнформация();
	Информация = "";
	Попытка
		Информация = Инфо[Параметр];
	Исключение
		Информация = ОписаниеОшибки();
	КонецПопытки;
	Ресурс = "bot" + Объект.Токен + "/sendMessage?chat_id=" + СтрЗаменить(Формат(chat_id, "ЧДЦ=; ЧС=; ЧРГ=."), ".", "") + "&text= " + Информация;
	Соединение  =  Новый HTTPСоединение(Объект.Сервер,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(Ресурс);
	Ответ = Соединение.Получить(Запрос);
КонецПроцедуры