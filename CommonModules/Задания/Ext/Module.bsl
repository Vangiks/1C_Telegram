Процедура ПолучитьUpdate()Экспорт 
	
	ЗапросМакс = Новый Запрос("ВЫБРАТЬ
	                          |	МАКСИМУМ(update.update_id) КАК update_id
	                          |ИЗ
	                          |	РегистрСведений.update КАК update");
	Выборка = ЗапросМакс.Выполнить().Выбрать();
	Если Выборка.Следующий() ТОгда
		OffSet = "?offset="+Формат(Выборка.update_id, "ЧГ=");
	Иначе
		OffSet = "";
	КонецЕсли;
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "getUpdates"+OffSet;
	Ресурс = "bot"+Ключ+"/"+Команда;
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	Если ОтветСоотв["ok"] Тогда
		getUpdatesОбОтв(ОтветСоотв);
	КонецЕсли;
	
КонецПроцедуры

Процедура setWebhook(ok)Экспорт 
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "setWebhook";
	Ресурс = "bot"+Ключ+"/"+Команда+"?url="+КодироватьСтроку(Константы.URLWebhook.Получить(),СпособКодированияСтроки.КодировкаURL);
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	ok=ОтветСоотв["ok"];
	
КонецПроцедуры

Процедура getUpdatesОбОтв(ОтветСоотв)
	
	ТабID = Новый ТаблицаЗначений;
	ТабID.Колонки.Добавить("update_id", ОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(15));
	
	Для Каждого upd Из ОтветСоотв["result"] Цикл
		
		СтрТаб = ТабID.Добавить();
		СтрТаб.update_id = upd["update_id"];
				  
	КонецЦикла;
			
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТабID.update_id
	                      |ПОМЕСТИТЬ ТабID
	                      |ИЗ
	                      |	&ТабID КАК ТабID
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ТабID.update_id КАК update_id
	                      |ИЗ
	                      |	ТабID КАК ТабID
	                      |ГДЕ
	                      |	НЕ ТабID.update_id В
	                      |				(ВЫБРАТЬ
	                      |					update.update_id
	                      |				ИЗ
	                      |					РегистрСведений.update КАК update) ");
						  
	Запрос.УстановитьПараметр("ТабID",ТабID);
	
	НовыеАпдейты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("update_id");
	
	Для Каждого upd Из ОтветСоотв["result"] Цикл
		Если НовыеАпдейты.Найти(upd["update_id"]) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		message = upd["message"];
		мз = РегистрыСведений.update.СоздатьМенеджерЗаписи();
		мз.update_id = upd["update_id"];
		мз.date = МестноеВремя(Дата('19700101')+message["date"]);
		мз.text = message["text"];
		мз.message_id 	= message["message_id"];
		мз.first_name 	= message["from"]["first_name"];
		мз.id 			= message["from"]["id"];
		мз.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьЗапросы() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	update.update_id,
	                      |	update.date,
	                      |	update.text,
	                      |	update.message_id КАК message_id,
	                      |	update.first_name,
	                      |	update.id КАК id
	                      |ИЗ
	                      |	РегистрСведений.update КАК update
	                      |ГДЕ
	                      |	НЕ update.Обработан
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	message_id
	                      |ИТОГИ ПО
	                      |	id");
	ВыборкаЮзеров = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЮзеров.Следующий() Цикл
		ВыборкаЗапросов = ВыборкаЮзеров.Выбрать();
		Пока ВыборкаЗапросов.Следующий() Цикл
			ok = Ложь;
			ОбработатьЗапрос(ВыборкаЗапросов, ok);
			Если ok Тогда
				мз = РегистрыСведений.update.СоздатьМенеджерЗаписи();
				мз.update_id =ВыборкаЗапросов.update_id;
				мз.Прочитать();
				мз.Обработан = Истина;
				мз.Записать();
			КонецЕсли;
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьЗапрос(ЗапросПользователя, ok)
	
	Если ЗапросПользователя.text = "/ТестФайл" Тогда
		ОтправитьФайл(ЗапросПользователя.id, ok);
	Иначе
		ОтправитьСообщение(СформироватьСообщение(ЗапросПользователя.text,ЗапросПользователя), ЗапросПользователя.id, ok);		
	КонецЕсли;
	 		
КонецПроцедуры

Функция ПолучитьФото(АдресФото)
	
	Возврат АдресФото;		
	
КонецФункции

Процедура ОтправитьФайл(ПолучательID, ok)
    	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "sendDocument";
	Ресурс = "bot"+Ключ+"/"+Команда; 
	
    ИмяФайла = "C:\Users\frenz\AppData\Local\Temp\ATT83PL.rtf";  
    Boundary = "----"+Строка(Новый УникальныйИдентификатор());
    
    //Определяем массив для процедуры ОбъединитьФайлы
    МассивФайловДляОбъединения = Новый Массив;
    
    //Формируем начальный фрагмент файла POST-запроса
    ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.UTF8);
    
    //Формируем конечный фрагмент файла POST-запроса
    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
    ФайлаОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.UTF8);
    
    ТекстДляОтправки = "";
    
    ТекстДляОтправки = ТекстДляОтправки + "--"+Boundary + Символы.ПС;
    ТекстДляОтправки = ТекстДляОтправки + "Content-Disposition: form-data; name=""chat_id""" + Символы.ПС + Символы.ПС;
    ТекстДляОтправки = ТекстДляОтправки + Формат(ПолучательID, "ЧГ=") + Символы.ПС;
    
    ТекстДляОтправки = ТекстДляОтправки + "--"+Boundary + Символы.ПС;
    ТекстДляОтправки = ТекстДляОтправки + "Content-Disposition: form-data; name=""document""; filename=""ATT83PL.rtf""" + Символы.ПС;
    
    ФайлОтправкиНачало.ЗаписатьСтроку(ТекстДляОтправки );
    ФайлОтправкиНачало.Закрыть();
    
    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);
    
    МассивФайловДляОбъединения.Добавить(СокрЛП(ИмяФайла));
    
    ТекстДляОтправки = "" + Символы.ПС;
    ТекстДляОтправки = ТекстДляОтправки + "--"+Boundary+"--";
    ФайлаОтправкиКонец.ЗаписатьСтроку(ТекстДляОтправки);
    ФайлаОтправкиКонец.Закрыть();
    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец);
    
    ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("txt");
    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);
    
    HTTPЗапрос = Новый HTTPЗапрос;
    Заголовки  = Новый Соответствие;		
    HTTPЗапрос.Заголовки.Вставить("Connection", "keep-alive");
    HTTPЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary="+Boundary);   
    HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
    HTTPЗапрос.АдресРесурса = "/" + Ресурс;
    
    HTTPСоединение = Новый HTTPСоединение(Сервер,,,,,, Новый ЗащищенноеСоединениеOpenSSL);
    
    Попытка
        ОтветHTTP = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
		
		//Ответ = HTTPСоединение.Получить(HTTPЗапрос);
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());	
		ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	    ok = ОтветСоотв["ok"] ;
	Исключение
        //СообщитьОбОшибке(chat_id, ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ОтправитьФото (ТекстСообщения, ПолучательID, ok)
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "sendPhoto";
	Ресурс = "bot"+Ключ+"/"+Команда+"?chat_id="+Формат(ПолучательID,"ЧГ=")+"&photo="+СокрЛП(ТекстСообщения); 
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	ok = ОтветСоотв["ok"] ;
		
КонецПроцедуры

Процедура ОтправитьСообщение (ТекстСообщения, ПолучательID, ok)
	
	Ключ = Константы.КлючAPI.Получить();
	Сервер = "api.telegram.org";
	Команда = "sendMessage";
	Ресурс = "bot"+Ключ+"/"+Команда+"?chat_id="+Формат(ПолучательID,"ЧГ=")+"&text="+СокрЛП(ТекстСообщения); 
	Соединение = Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Запрос = Новый HTTPЗапрос(Ресурс); 
	
	Ответ = Соединение.Получить(Запрос);
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	
	ОтветСоотв = ПрочитатьJSON(Чтение,Истина);
	ok = ОтветСоотв["ok"] ;
		
КонецПроцедуры

Функция СформироватьСообщение(ТипЗапроса, ЗапросПользователя)
	
	Результат = "Неизвестный запрос";
	
	Если ТипЗапроса = "/start"  тогда
		Результат = СокрЛП(ПолучитьОбщийМакет("ОтветStart").ПолучитьТекст()) ;	
	ИначеЕсли ТипЗапроса = "/wt"  тогда
		Результат = "Шепчет!";
	ИначеЕсли ТипЗапроса = "/time"  тогда
		Результат = Формат(ТекущаяДата(),"ДЛФ=DDT") ;
	ИначеЕсли ТипЗапроса = "/hello"  тогда
		Результат = "Привет," +ЗапросПользователя.first_name;
	ИначеЕсли ТипЗапроса = "/АктивныеПользователи"  тогда
		ОписаниеАктивныхПользователей = ПолучитьОписаниеАктивныхПользователей();
		Результат = ОписаниеАктивныхПользователей;
	ИначеЕсли ТипЗапроса = "/ТестФайл" Тогда	
			
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСпособВЗ() Экспорт
	
	СпособВЗ = Константы.СпособВыполненияЗаданий.Получить();
	Если СпособВЗ.Пустая() Тогда
		СпособВЗ = Перечисления.СпособыВыполненияЗаданий.ФормаОбработки;
		Константы.СпособВыполненияЗаданий.Установить(СпособВЗ);		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапускатьКлиент() Экспорт 	
	Возврат Константы.СпособВыполненияЗаданий.Получить() = Перечисления.СпособыВыполненияЗаданий.ФормаОбработки 
		        И ЗначениеЗаполнено(Константы.КлючAPI.Получить()) 
КонецФункции

Функция ПолучитьОписаниеАктивныхПользователей()
	
	Описание = "Список активных пользователей:" + Символы.ПС;
	мсвАктивныхПОльзователей = ПолучитьСоединенияИнформационнойБазы();
	Для каждого Пользователей из мсвАктивныхПОльзователей Цикл
		Описание = Описание + Пользователей + Символы.ПС;		
	КонецЦикла;
		
	Возврат Описание;
КонецФункции